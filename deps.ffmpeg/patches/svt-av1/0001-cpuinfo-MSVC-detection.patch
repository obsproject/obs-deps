--- ./third_party/cpuinfo/CMakeLists.txt
+++ ./third_party/cpuinfo/CMakeLists.txt
@@ -60,12 +60,19 @@ IF(NOT CMAKE_SYSTEM_PROCESSOR)
       "cpuinfo will compile, but cpuinfo_initialize() will always fail.")
     SET(CPUINFO_SUPPORTED_PLATFORM FALSE)
   ENDIF()
-ELSEIF(NOT CMAKE_SYSTEM_PROCESSOR MATCHES "^(i[3-6]86|AMD64|amd64|x86(_64)?|armv[5-8].*|aarch64|arm64)$")
+ELSEIF(MSVC)
+  IF(NOT CMAKE_GENERATOR_PLATFORM MATCHES "^(Win32|x64)$")
+    MESSAGE(WARNING
+      "Target processor architecture \"${CMAKE_SYSTEM_PROCESSOR}\" is not supported in cpuinfo. "
+      "cpuinfo will compile, but cpuinfo_initialize() will always fail.")
+    SET(CPUINFO_SUPPORTED_PLATFORM FALSE)
+  ENDIF()
+ELSEIF(NOT CMAKE_SYSTEM_PROCESSOR MATCHES "^(i[3-6]86|AMD64|amd64|x86(_64)?|armv[5-8].*|aarch64|arm64)$")
   MESSAGE(WARNING
     "Target processor architecture \"${CMAKE_SYSTEM_PROCESSOR}\" is not supported in cpuinfo. "
     "cpuinfo will compile, but cpuinfo_initialize() will always fail.")
   SET(CPUINFO_SUPPORTED_PLATFORM FALSE)
-ENDIF()
+ENDIF()
 
 IF(NOT CMAKE_SYSTEM_NAME)
     MESSAGE(WARNING
@@ -87,7 +94,11 @@ SET(CPUINFO_SRCS
   src/api.c)
 
 IF(CPUINFO_SUPPORTED_PLATFORM)
-  IF(NOT CMAKE_SYSTEM_NAME STREQUAL "Emscripten" AND (CMAKE_SYSTEM_PROCESSOR MATCHES "^(i[3-6]86|AMD64|amd64|x86(_64)?)$" OR IOS_ARCH MATCHES "^(i386|x86_64)$"))
+  IF(NOT CMAKE_SYSTEM_NAME STREQUAL "Emscripten" AND
+    (CMAKE_SYSTEM_PROCESSOR MATCHES "^(i[3-6]86|AMD64|amd64|x86(_64)?)$" OR
+     IOS_ARCH MATCHES "^(i386|x86_64)$" OR
+     (MSVC AND CMAKE_GENERATOR_PLATFORM MATCHES "^(Win32|x64)$")
+  ))
     LIST(APPEND CPUINFO_SRCS
       src/x86/x86_init.c
       src/x86/vendor.c
